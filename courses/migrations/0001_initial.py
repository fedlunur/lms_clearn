# Generated by Django 5.0.6 on 2025-10-26 07:05

import django.contrib.postgres.fields
import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ArticleLesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(blank=True)),
                ("estimated_read_time", models.PositiveIntegerField(default=0)),
                ("attachments", models.JSONField(blank=True, default=list)),
                ("external_links", models.JSONField(blank=True, default=list)),
            ],
            options={
                "verbose_name_plural": "ArticleLesson",
            },
        ),
        migrations.CreateModel(
            name="AssignmentLesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("instructions", models.TextField(blank=True)),
                (
                    "submission_types",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=10),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("due_date", models.DateTimeField(blank=True, null=True)),
                ("due_days", models.PositiveIntegerField(blank=True, null=True)),
                ("max_score", models.FloatField(default=100)),
                ("max_attempts", models.PositiveIntegerField(default=1)),
                ("rubric", models.TextField(blank=True)),
                ("rubric_criteria", models.JSONField(blank=True, default=list)),
                ("peer_review", models.BooleanField(default=False)),
                ("word_limit", models.PositiveIntegerField(blank=True, null=True)),
                ("allow_late_submission", models.BooleanField(default=True)),
                ("late_deduction", models.FloatField(default=10.0)),
            ],
            options={
                "verbose_name_plural": "AssignmentLesson",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=120, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=140, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Frontend icon identifier, e.g., 'BookOpen', 'Code', etc.",
                        max_length=50,
                    ),
                ),
                ("count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Category",
            },
        ),
        migrations.CreateModel(
            name="Certificate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("certificate_number", models.CharField(max_length=100, unique=True)),
                ("issued_date", models.DateTimeField(auto_now_add=True)),
                ("grade", models.CharField(default="A", max_length=2)),
            ],
            options={
                "verbose_name_plural": "Certificate",
            },
        ),
        migrations.CreateModel(
            name="CheckpointQuizResponse",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("selected_answer_index", models.IntegerField()),
                ("is_correct", models.BooleanField(default=False)),
                ("responded_at", models.DateTimeField(auto_now_add=True)),
                ("time_taken", models.DurationField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "Check Point Response",
                "ordering": ["-responded_at"],
            },
        ),
        migrations.CreateModel(
            name="Conversation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject", models.CharField(blank=True, max_length=200)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_message_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Conversation ",
                "ordering": ["-last_message_at"],
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, max_length=220, null=True)),
                ("description", models.TextField(blank=True)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="course_thumbnails/"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("draft", "Draft"), ("published", "Published")],
                        default="draft",
                        max_length=10,
                    ),
                ),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("rejection_reason", models.TextField(blank=True)),
                (
                    "submitted_for_approval_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("issue_certificate", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Courses",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CourseAnnouncement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("scheduled_for", models.DateTimeField(blank=True, null=True)),
                ("is_published", models.BooleanField(default=True)),
                ("is_pinned", models.BooleanField(default=False)),
                ("send_notification", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Course Announcement",
                "ordering": ["-is_pinned", "-published_at", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CourseBadge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("badge_type", models.CharField(blank=True, max_length=20, null=True)),
                ("awarded_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("enrollment_count", models.IntegerField(blank=True, null=True)),
                ("average_rating", models.FloatField(blank=True, null=True)),
                ("view_count", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "LessonCourseBadge",
            },
        ),
        migrations.CreateModel(
            name="CourseQA",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question_title", models.CharField(max_length=200)),
                ("question_text", models.TextField()),
                ("answer_text", models.TextField(blank=True)),
                ("answered_at", models.DateTimeField(blank=True, null=True)),
                ("is_answered", models.BooleanField(default=False)),
                ("is_pinned", models.BooleanField(default=False)),
                ("is_public", models.BooleanField(default=True)),
                ("helpful_votes", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "CourseQA",
                "ordering": ["-is_pinned", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CourseRating",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[
                            (1, "1 Star"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ]
                    ),
                ),
                ("review_title", models.CharField(blank=True, max_length=200)),
                ("review_text", models.TextField(blank=True)),
                (
                    "content_quality",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "1 Star"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "instructor_quality",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "1 Star"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "difficulty_level",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "1 Star"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "value_for_money",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "1 Star"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ],
                        null=True,
                    ),
                ),
                ("is_public", models.BooleanField(default=True)),
                ("is_verified_purchase", models.BooleanField(default=False)),
                ("helpful_votes", models.IntegerField(default=0)),
                ("is_approved", models.BooleanField(default=True)),
                ("moderation_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Course Rating",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CourseResource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("pdf", "PDF"),
                            ("doc", "Document"),
                            ("link", "External Link"),
                            ("video", "Video"),
                            ("image", "Image"),
                            ("other", "Other"),
                        ],
                        default="pdf",
                        max_length=20,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True, null=True, upload_to="course_resources/"
                    ),
                ),
                ("url", models.URLField(blank=True)),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        help_text="e.g., 'Reference Materials', 'Additional Reading'",
                        max_length=100,
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_public", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Course Resources",
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("enrolled_at", models.DateTimeField(auto_now_add=True)),
                ("progress", models.FloatField(default=0.0)),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                ("completed", models.BooleanField(default=False)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "Enrollment",
                "ordering": ["-enrolled_at"],
            },
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("video", "Video"),
                            ("text", "Text"),
                            ("quiz", "Quiz"),
                            ("assignment", "Assignment"),
                            ("article", "Article"),
                            ("file", "File"),
                            ("url", "URL/Link"),
                        ],
                        default="video",
                        max_length=20,
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                ("duration", models.DurationField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Lesson",
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="LessonProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("progress", models.FloatField(default=0.0)),
                ("completed", models.BooleanField(default=False)),
                ("first_accessed", models.DateTimeField(auto_now_add=True)),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("time_spent", models.DurationField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "LessonProgress",
                "ordering": ["lesson__order"],
            },
        ),
        migrations.CreateModel(
            name="LessonResource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("type", models.CharField(max_length=50)),
                (
                    "file",
                    models.FileField(
                        blank=True, null=True, upload_to="lesson_resources/"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "LessonResource",
            },
        ),
        migrations.CreateModel(
            name="Level",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("code", models.SlugField(unique=True)),
            ],
            options={
                "verbose_name_plural": "Level",
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("assignment_question", "Assignment Question"),
                            ("course_question", "Course Question"),
                            ("general", "General"),
                        ],
                        default="text",
                        max_length=20,
                    ),
                ),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("is_read", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name_plural": "Message",
                "ordering": ["sent_at"],
            },
        ),
        migrations.CreateModel(
            name="Module",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("order", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name_plural": "Modules",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="QuizAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("answer_text", models.CharField(max_length=500)),
                (
                    "answer_image",
                    models.ImageField(blank=True, null=True, upload_to="quiz_answers/"),
                ),
                ("is_correct", models.BooleanField(default=False)),
                ("order", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name_plural": "QuizAnswer",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="QuizAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.FloatField(default=0.0)),
                ("total_questions", models.PositiveIntegerField(default=0)),
                ("correct_answers", models.PositiveIntegerField(default=0)),
                ("completed_at", models.DateTimeField(auto_now_add=True)),
                ("time_taken", models.DurationField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "QuizAttempt",
                "ordering": ["-completed_at"],
            },
        ),
        migrations.CreateModel(
            name="QuizConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_limit",
                    models.PositiveIntegerField(
                        default=30, help_text="Time limit in minutes"
                    ),
                ),
                (
                    "passing_score",
                    models.PositiveIntegerField(
                        default=70, help_text="Passing score percentage"
                    ),
                ),
                (
                    "max_attempts",
                    models.PositiveIntegerField(
                        default=3, help_text="Maximum attempts allowed"
                    ),
                ),
                ("randomize_questions", models.BooleanField(default=False)),
                ("show_correct_answers", models.BooleanField(default=True)),
                (
                    "grading_policy",
                    models.CharField(
                        choices=[
                            ("highest", "Highest Score"),
                            ("latest", "Latest Attempt"),
                            ("average", "Average Score"),
                            ("first", "First Attempt"),
                        ],
                        default="highest",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "QuizConfiguration",
            },
        ),
        migrations.CreateModel(
            name="QuizLesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(default="multiple-choice", max_length=50)),
                ("time_limit", models.PositiveIntegerField(default=30)),
                ("passing_score", models.PositiveIntegerField(default=70)),
                ("attempts", models.PositiveIntegerField(default=3)),
                ("randomize_questions", models.BooleanField(default=False)),
                ("show_correct_answers", models.BooleanField(default=True)),
                ("grading_policy", models.CharField(default="highest", max_length=20)),
                ("questions", models.JSONField(blank=True, default=list)),
            ],
            options={
                "verbose_name_plural": "QuizLesson",
            },
        ),
        migrations.CreateModel(
            name="QuizQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("multiple-choice", "Multiple Choice"),
                            ("true-false", "True/False"),
                            ("fill-blank", "Fill in Blank"),
                            ("drag-drop", "Drag & Drop"),
                            ("short-answer", "Short Answer"),
                        ],
                        default="multiple-choice",
                        max_length=20,
                    ),
                ),
                ("question_text", models.TextField()),
                (
                    "question_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="quiz_questions/"
                    ),
                ),
                ("explanation", models.TextField(blank=True)),
                ("points", models.PositiveIntegerField(default=1)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "blanks",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of correct answers for blanks",
                    ),
                ),
                (
                    "drag_items",
                    models.JSONField(
                        blank=True, default=list, help_text="List of draggable items"
                    ),
                ),
                (
                    "drop_zones",
                    models.JSONField(
                        blank=True, default=list, help_text="List of drop zones"
                    ),
                ),
                (
                    "drag_drop_mappings",
                    models.JSONField(
                        blank=True, default=dict, help_text="Correct drag-drop mappings"
                    ),
                ),
                (
                    "option_images",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of image URLs/paths for multiple choice options",
                    ),
                ),
                (
                    "drag_item_images",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of image URLs/paths for drag items",
                    ),
                ),
                (
                    "drop_zone_images",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of image URLs/paths for drop zones",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "QuizQuestion",
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="ResourceProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("completed", models.BooleanField(default=False)),
                ("accessed_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "ResourceProgress",
            },
        ),
        migrations.CreateModel(
            name="VideoCheckpointQuiz",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question_text", models.TextField()),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("multiple-choice", "Multiple Choice"),
                            ("true-false", "True/False"),
                        ],
                        default="multiple-choice",
                        max_length=20,
                    ),
                ),
                (
                    "options",
                    models.JSONField(default=list, help_text="List of answer options"),
                ),
                (
                    "correct_answer_index",
                    models.IntegerField(help_text="Index of correct answer (0-based)"),
                ),
                (
                    "explanation",
                    models.TextField(
                        blank=True, help_text="Explanation shown after answering"
                    ),
                ),
                (
                    "timestamp_seconds",
                    models.IntegerField(
                        help_text="Time in seconds when quiz should appear"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Optional title for the checkpoint quiz",
                        max_length=200,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Video Check point Quiz",
                "ordering": ["timestamp_seconds"],
            },
        ),
        migrations.CreateModel(
            name="VideoCheckpointResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("selected_answer_index", models.IntegerField()),
                ("is_correct", models.BooleanField(default=False)),
                ("responded_at", models.DateTimeField(auto_now_add=True)),
                ("time_taken", models.DurationField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "Video Checkpoint Responses",
                "ordering": ["-responded_at"],
            },
        ),
        migrations.CreateModel(
            name="VideoLesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "video_file",
                    models.FileField(blank=True, null=True, upload_to="lesson_videos/"),
                ),
                ("youtube_url", models.URLField(blank=True, max_length=500)),
                ("transcript", models.TextField(blank=True)),
                ("chapters", models.JSONField(blank=True, default=list)),
                ("duration", models.DurationField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "VideoLesson",
            },
        ),
    ]
